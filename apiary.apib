FORMAT: 1A
HOST: https://evnts-back-api.herokuapp.com/

# Desafio-evnts API

API Created during a technical skill challenge for an app called 'uaifood'. The API is able to register new users, restaurants and restaurant items. It can also receive geolocation filters (using haversine formula) to find a restaurant within a determined location.

## User Routes [/user]
User related routes

### Create [POST]

You can create a user (customer or seller) using this route.

+ Request (application/json)
    + Body
    
            {
                email: "tester@email.com" (email)
                password: "Password123" (string)
                role: "customer" | "seller" (string)
                lat?: -29.58 (number)
                lng?: -51.08 (number)
            }

+ Response 201 (application/json)
       
        {
            _id: "62b8b502926c21aa016d1bf6" (string)
            email: "tester@email.com" (email)
            role: "customer" | "seller" (string)
            lat?: -29.58 (number)
            lng?: -51.08 (number)
        }

### Login [POST /user/login]

You can use this route to make login and retrieve a valid authentication Token (JWT).

+ Request (application/json)
    + Body
    
            {
                email: "tester@email.com" (string)
                password: "Password123" (string)
            }

+ Response 200 (application/json)
        
        {
            token: "eyJhbGciOiJIUzI1NiIsInR5..." (string)
        }

## Restaurant Routes [/restaurant]
Restaurant related routes

### List All [GET]

You can use this route to list every restaurant in the database.

+ Response 200 (application/json)
        
        [
            {
                _id: "62b89ee76680d6f0ecee4fa2" (string)
                name: "Bar do Zé" (string)
                type: "Brasileira" (string)
                city: "Barbacena" (string)
                state_ab: "MG" (string)
                lat?: -21.21 (number)
                lng?: -43.77 (number)
            },
            {
                ...
            }
        ]

### List All By Filter [GET /restaurant{?name,type,itemName,lat,lng,distance}]

You can use this route to list a filtered list of restaurants in the database.

+ Parameters
    + name (string) - Restaurant Name (Regular expression)
    + type (string) - Restaurant Type
    + itemName (string) - Restaurant Item Name (Regular expression)
    + lat (number) - Valid Latitude Number
    + lng (number) - Valid Longitude Number
    + distance (number) - Max. Restaurant Distance from lat & lng

+ Response 200 (application/json)
        
        [
            {
                _id: "62b89ee76680d6f0ecee4fa2" (string)
                name: "Bar do Zé" (string)
                type: "Brasileira" (string)
                city: "Barbacena" (string)
                state_ab: "MG" (string)
                lat?: -21.21 (number)
                lng?: -43.77 (number)
            },
            {
                ...
            }
        ]

### List By Id [GET /restaurant/${id}]

You can use this route to find a restaurant by id.

+ Parameters
    + id (hex) - Restaurant Id

+ Response 200 (application/json)
        
        {
            _id: "62b89ee76680d6f0ecee4fa2" (string)
            name: "Bar do Zé" (string)
            type: "Brasileira" (string)
            city: "Barbacena" (string)
            state_ab: "MG" (string)
            lat?: -21.21 (number)
            lng?: -43.77 (number)
        }

### Create [POST]

You can use this route to create a new restaurant.

+ Request
    + Headers
    
            Authorization: JWT Token

+ Request (application/json)
    + Body
    
            {
                name: "Restaurante do Zé" (string)
                type: "Brasileira" (string)
                city: "Barbacena" (string)
                state_ab: "MG" (string)
                lat?: -21.21 (number)
                lng?: -43.77 (number)
            }

+ Response 201 (application/json)
       
            {
                _id: "62b89ee76680d6f0ecee4fa2" (string)
                name: "Restaurante do Zé" (string)
                type: "Brasileira" (string)
                city: "Barbacena" (string)
                state_ab: "MG" (string)
                lat?: -21.21 (number)
                lng?: -43.77 (number)
            }

### Remove [DELETE /restaurant/{id}]

You can use this route to remove/delete a restaurant.

+ Parameters
    + id (hex) - Restaurant Id

+ Request
    + Headers
    
            Authorization: JWT Token

+ Response 204

## Item Routes [/restaurant/${id}/item]
Item related routes

+ Parameters
    + id (hex) - Restaurant Id


### List All [GET]

You can use this route to list every item from every restaurant in the database.

+ Response 200 (application/json)
        
        [
            {
                _id: "62b752b91c393b6b3d34e374" (string)
                name: "Queijo Minas na Tábua - 2 pessoas" (string)
                description: "Delicioso queijo minas servido na tábua para 2 pessoas." (string)
                type: "Tábua" (string)
                price: 35 (number)
                restaurantId: "62b61cfb17fc1b4245018806" (string)
            },
            {
                ...
            }
        ]

### List All By Filter [GET /restaurant/${id}/item{?name,type}]

You can use this route to list a filtered list of items in the database.

+ Parameters
    + name (string) - Item Name (Regular expression)
    + type (string) - Item Type

+ Response 200 (application/json)
        
        [
            {
                _id: "62b752b91c393b6b3d34e374" (string)
                name: "Queijo Minas na Tábua - 2 pessoas" (string)
                description: "Delicioso queijo minas servido na tábua para 2 pessoas." (string)
                type: "Tábua" (string)
                price: 35 (number)
                restaurantId: "62b61cfb17fc1b4245018806" (string)
            },
            {
                ...
            }
        ]

### Create [POST]

You can use this route to create a new item.

+ Request
    + Headers
    
            Authorization: JWT Token

+ Request (application/json)
    + Body
    
            {
                name: "Queijo Minas na Tábua - 2 pessoas" (string)
                description: "Delicioso queijo minas servido na tábua para 2 pessoas." (string)
                type: "Tábua" (string)
                price: 35 (number)
            }

+ Response 201 (application/json)
       
            {
                _id: "62b752b91c393b6b3d34e374" (string)
                name: "Queijo Minas na Tábua - 2 pessoas" (string)
                description: "Delicioso queijo minas servido na tábua para 2 pessoas." (string)
                type: "Tábua" (string)
                price: 35 (number)
                restaurantId: "62b61cfb17fc1b4245018806" (string)
            }
            
### Update [PATCH /restaurant/{id}/item/{itemId}]

You can use this route to update an item properties.

+ Parameters
    + itemId (string) - Item Id

+ Request
    + Headers
    
            Authorization: JWT Token

+ Request (application/json)
    + Body
    
            {
                name?: "Queijo Minas na Tábua - 2 pessoas" (string)
                description?: "Delicioso queijo minas servido na tábua para 2 pessoas." (string)
                type?: "Tábua" (string)
                price?: 40 (number)
            }

+ Response 200 (application/json)
       
            {
                _id: "62b752b91c393b6b3d34e374" (string)
                name: "Queijo Minas na Tábua - 2 pessoas" (string)
                description: "Delicioso queijo minas servido na tábua para 2 pessoas." (string)
                type: "Tábua" (string)
                price: 40 (number)
                restaurantId: "62b61cfb17fc1b4245018806" (string)
            }
            
### Remove [DELETE /restaurant/{id}/item/{itemId}]

You can use this route to remove/delete an item.

+ Parameters
    + itemId (string) - Item Id

+ Request
    + Headers
    
            Authorization: JWT Token

+ Response 204